upstream transaction_upstream {
    server transaction-app:3000; # Use the service name and internal port
}

upstream transfer_upstream {
    server transfer-app:3000;   # Use the service name and internal port
}

server {
    listen 80;
    server_name localhost; # Or your domain name if you have one

    location ~ ^/transfer/transaction(/.*)$ {
        return 301 /transaction$1;
    }
    
    location /transaction/ {
        proxy_pass http://transaction_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/transaction/ {
        proxy_pass http://transaction_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /transfer/ {
        proxy_pass http://transfer_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/transfer/ {
        proxy_pass http://transfer_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Optional: A root location or a default fallback
    location / {
        return 404 "Not Found"; # Or serve a default page
    }
}